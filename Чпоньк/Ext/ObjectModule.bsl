#Область ПрограммныйИнтерфейс

Функция ТаблицаВМассивСтруктур(Таблица) Экспорт
	
	МассивСтруктур = Новый Массив;
	Свойства = Новый Массив;
	
	Для Каждого Колонка Из Таблица.Колонки Цикл
		Свойства.Добавить(Колонка.Имя);
	КонецЦикла;
	
	СписокСвойств = СтрСоединить(Свойства, ",");
	
	Для Каждого Строка Из Таблица Цикл
		
		Структура = Новый Структура(СписокСвойств);
		ЗаполнитьЗначенияСвойств(Структура, Строка);
		МассивСтруктур.Добавить(Структура);
		
	КонецЦикла;
	
	Возврат МассивСтруктур;
	
КонецФункции

Функция ТаблицаИзМакета(ИмяМакета) Экспорт
	
	ТабличныйДокумент = ПолучитьМакет(ИмяМакета);
	
	Таблица = Новый ТаблицаЗначений;
	Колонки = Новый Массив;
	
	Для НомерСтолбца = 1 По ТабличныйДокумент.ШиринаТаблицы Цикл
		
		Текст = ТабличныйДокумент.Область(СтрШаблон("R1C%1", Формат(НомерСтолбца, "ЧГ="))).Текст;
		
		Если Не ЗначениеЗаполнено(Текст) Тогда
			Прервать;
		КонецЕсли;
		
		Таблица.Колонки.Добавить(Текст, Новый ОписаниеТипов("Строка"));
		Колонки.Добавить(Текст);
		
	КонецЦикла;
	
	Для НомерСтроки = 2 По ТабличныйДокумент.ВысотаТаблицы Цикл
		
		СтрокаТаблицы = Таблица.Добавить();
		
		Для ИндексКолонки = 0 По Колонки.ВГраница() Цикл
			
			ИмяОбласти = СтрШаблон("R%1C%2", Формат(НомерСтроки, "ЧГ="), Формат(ИндексКолонки + 1, "ЧГ="));
			СтрокаТаблицы[Колонки[ИндексКолонки]] = ТабличныйДокумент.Область(ИмяОбласти).Текст;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Таблица;
	
КонецФункции

// Возвращает дерево объектов в иерархии модулей и классов
// 
// Параметры:
//  КлассыОбъектов	 - ТаблицаЗначений:
//     * Класс - Строка - Имя класса объекта. Не может быть неограниченной длины
//     * Объект - Строка - Имя объекта метаданных. Не может быть неограниченной длины
// 
// Возвращаемое значение:
//   - ДеревоЗначений:
//        * Сущность - Строка - Имя класса/объекта/модуля в зависимости от уровня
//        * КлючМодуля - Строка - Заполнен для уровня "объект"
//
Функция ПостроитьДеревоОбъектов(КлассыОбъектов) Экспорт
	
	Строка150 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150));
	
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("Сущность", Строка150);
	Дерево.Колонки.Добавить("КлючМодуля", Строка150);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Т.Класс КАК Класс,
		|	Т.Объект КАК Объект
		|ПОМЕСТИТЬ ВТ_КлассыОбъектов
		|ИЗ
		|	&КлассыОбъектов КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Класс КАК Класс,
		|	Т.Модуль КАК Модуль,
		|	Т.Доступность КАК Доступность
		|ПОМЕСТИТЬ ВТ_МодулиКлассов
		|ИЗ
		|	&МодулиКлассов КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Класс КАК Класс,
		|	Т.Объект КАК Объект,
		|	Т1.Модуль КАК Модуль,
		|	Т1.Класс + ""."" + Т1.Модуль КАК КлючМодуля
		|ИЗ
		|	ВТ_КлассыОбъектов КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_МодулиКлассов КАК Т1
		|		ПО (Т1.Класс = Т.Класс)
		|			И (Т1.Доступность)
		|ИТОГИ ПО
		|	Класс,
		|	Объект";
	
	Запрос.УстановитьПараметр("КлассыОбъектов", КлассыОбъектов);
	Запрос.УстановитьПараметр("МодулиКлассов", МодулиКлассов);
	
	ВыборкаПоКлассам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоКлассам.Следующий() Цикл
		
		СтрокаКласса = Дерево.Строки.Добавить();
		СтрокаКласса.Сущность = ВыборкаПоКлассам.Класс;
		
		ВыборкаПоОбъектам = ВыборкаПоКлассам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоОбъектам.Следующий() Цикл
			
			СтрокаОбъекта = СтрокаКласса.Строки.Добавить();
			СтрокаОбъекта.Сущность = ВыборкаПоОбъектам.Объект;
			
			Выборка = ВыборкаПоОбъектам.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				СтрокаМодуля = СтрокаОбъекта.Строки.Добавить();
				СтрокаМодуля.Сущность = Выборка.Модуль;
				СтрокаМодуля.КлючМодуля = Выборка.КлючМодуля;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Дерево;
	
КонецФункции

Процедура ЗаполнитьОбъектФормы(Приемник, Источник) Экспорт
	
	СписокРеквизитов = СписокРеквизитов();
	
	Для Каждого ИмяРеквизита Из СписокРеквизитов Цикл
		
		Если Не Приемник.Свойство(ИмяРеквизита) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(Источник[ИмяРеквизита]) = Тип("ДанныеФормыКоллекция") Тогда
			Приемник[ИмяРеквизита].Загрузить(Источник[ИмяРеквизита].Выгрузить());
		Иначе
			Приемник[ИмяРеквизита] = Источник[ИмяРеквизита];
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Функция ТекстИзМакета(ИмяМакета) Экспорт
	Возврат ПолучитьМакет(ИмяМакета).ПолучитьТекст();
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СписокРеквизитов()
	
	СписокРеквизитов = Новый Массив;
	Реквизиты = Метаданные().Реквизиты;
	
	Для Каждого Реквизит Из Реквизиты Цикл
		СписокРеквизитов.Добавить(Реквизит.Имя);
	КонецЦикла;
	
	ТабличныеЧасти = Метаданные().ТабличныеЧасти;
	
	Для Каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
		СписокРеквизитов.Добавить(ТабличнаяЧасть.Имя);
	КонецЦикла;
	
	Возврат СписокРеквизитов;
	
КонецФункции

#КонецОбласти
