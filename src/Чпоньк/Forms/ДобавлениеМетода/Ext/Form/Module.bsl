#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Асинх Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьОбъектИзОбъектаВладельца(ЭтотОбъект.ВладелецФормы.Объект);
	ЗаполнитьДеревоНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ИдентификаторФайла", ИдентификаторФайла);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМетодыТекущегоОбъекта

&НаКлиенте
Процедура МетодыТекущегоОбъектаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыделенныеСтроки = Элементы.МетодыТекущегоОбъекта.ВыделенныеСтроки;
	
	Для Каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
		
		ВыделеннаяСтрока = МетодыТекущегоОбъекта.НайтиПоИдентификатору(ИдентификаторСтроки);
		
		ЧастиКлюча = СтрРазделить(ВыделеннаяСтрока.КлючМодуля, ".");
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("РасширяемыйМетод", ВыделеннаяСтрока.Метод);
		ПараметрыОтбора.Вставить("Класс", ЧастиКлюча[0]);
		ПараметрыОтбора.Вставить("Модуль", ЧастиКлюча[1]);
		ПараметрыОтбора.Вставить("Объект", ВыделеннаяСтрока.Объект);
		
		СуществующиеСтроки = ВыбранныеМетоды.НайтиСтроки(ПараметрыОтбора);
		
		Если СуществующиеСтроки.Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеВыбранногоМетода = ВыбранныеМетоды.Добавить();
		ОписаниеВыбранногоМетода.Файл = ИдентификаторФайла;
		ЗаполнитьЗначенияСвойств(ОписаниеВыбранногоМетода, ВыделеннаяСтрока, "ТипМетода,Параметры");
		ЗаполнитьЗначенияСвойств(ОписаниеВыбранногоМетода, ПараметрыОтбора);
		ОписаниеВыбранногоМетода.Метод = СформироватьИмяМетода(ОписаниеВыбранногоМетода);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура МетодыТекущегоОбъектаПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.МетодыТекущегоОбъекта.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекущийМетод = "";
	Иначе
		ТекущийМетод = ТекущиеДанные.Метод;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоМетаданных

&НаКлиенте
Процедура ДеревоМетаданныхПриАктивизацииСтроки(Элемент)
	
	ИдентификаторСтроки = Элементы.ДеревоМетаданных.ТекущаяСтрока;
	
	Если ИдентификаторСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МетодыТекущегоОбъекта.Очистить();
	ТекущаяСтрока = ДеревоМетаданных.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если ТекущаяСтрока.ПолучитьРодителя() = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КлючиМодулей = Новый Массив;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.КлючМодуля) Тогда
		
		КлючиМодулей.Добавить(ТекущаяСтрока.КлючМодуля);
		ТекущийКласс = ТекущаяСтрока.ПолучитьРодителя().ПолучитьРодителя().Сущность;
		ТекущийОбъект = ТекущаяСтрока.ПолучитьРодителя().Сущность;
		ТекущийМодуль = ТекущаяСтрока.Сущность;
		
	Иначе
		
		Для Каждого ПодчиненнаяСтрока Из ТекущаяСтрока.ПолучитьЭлементы() Цикл
			Если ЗначениеЗаполнено(ПодчиненнаяСтрока.КлючМодуля) Тогда
				КлючиМодулей.Добавить(ПодчиненнаяСтрока.КлючМодуля);
			КонецЕсли;
		КонецЦикла;
		
		ТекущийКласс = ТекущаяСтрока.ПолучитьРодителя().Сущность;
		ТекущийОбъект = ТекущаяСтрока.Сущность;
		ТекущийМодуль = "";
		
	КонецЕсли;
	
	Для Каждого КлючМодуля Из КлючиМодулей Цикл
		
		ПараметрыОтбора = Новый Структура("КлючМодуля", КлючМодуля);
		НайденныеСтроки = Объект.ПредопределенныеМетоды.НайтиСтроки(ПараметрыОтбора);
		
		Для Каждого ПредопределенныйМетод Из НайденныеСтроки Цикл
			
			НоваяСтрока = МетодыТекущегоОбъекта.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ПредопределенныйМетод);
			НоваяСтрока.Объект = ТекущийОбъект;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Закрыть(СериализованныеНастройки());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция СформироватьИмяМетода(ОписаниеМетода)
	
	Возврат СтрШаблон("%1_%2_%3_%4",
		ОписаниеМетода.Класс,
		ОписаниеМетода.Объект,
		ОписаниеМетода.Модуль,
		ОписаниеМетода.РасширяемыйМетод);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьОбъектИзОбъектаВладельца(Знач ОбъектВладельца)
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ЗаполнитьОбъектФормы(Объект, ОбъектВладельца);
	
КонецПроцедуры

&НаСервере
Функция СериализованныеНастройки()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Возврат Обработка.ТаблицаВМассивСтруктур(ВыбранныеМетоды.Выгрузить());
	
КонецФункции

&НаКлиенте
Функция ПутьЭлементаДереваМетаданных(ТекущаяСтрока)
	
	ПутьЭлемента = Новый Структура;
	
	Пока ТекущаяСтрока <> Неопределено Цикл
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.Тип) Тогда
			ПутьЭлемента.Вставить(ТекущаяСтрока.Тип, ТекущаяСтрока.Объект);
		КонецЕсли;
		
		ТекущаяСтрока = ТекущаяСтрока.ПолучитьРодителя();
		
	КонецЦикла;
	
	Возврат ПутьЭлемента;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДеревоНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Дерево = Обработка.ПостроитьДеревоОбъектов(Объект.ОбъектыКонфигурации.Выгрузить());
	ЗначениеВРеквизитФормы(Дерево, "ДеревоМетаданных");
	
КонецПроцедуры

#КонецОбласти
