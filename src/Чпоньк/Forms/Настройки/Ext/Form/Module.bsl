#Область ПрограммныйИнтерфейс

&НаКлиенте
Асинх Функция Настройки() Экспорт
	
	ЗаполнитьОбъектИзОбъектаВладельца(ЭтотОбъект.ВладелецФормы.Объект);
	ПрочитатьНастройки();
	
	Если Объект.Настройки.Количество() = 0 Тогда
		Ждать ИнициализироватьНастройки();
	КонецЕсли;
	
	Возврат СериализованныеНастройки();
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьОбъектИзОбъектаВладельца(ЭтотОбъект.ВладелецФормы.Объект);
	ПрочитатьНастройки();
	СоздатьОбновитьЭлементыНастроек();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НастройкаПриИзменении()
	СохранитьНастройки();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройки

&НаКлиенте
Асинх Процедура НачалоВыбораФайлаВНастройки(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ТекущийФайл = Новый Файл(Элемент.ТекстРедактирования);
	Диалог.Каталог = ТекущийФайл.Путь;
	Диалог.МножественныйВыбор = Ложь;
	ВыбранныеФайлы = Ждать Диалог.ВыбратьАсинх();
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура("Ключ", Элемент.Имя);
	НайденныеСтроки = Объект.Настройки.НайтиСтроки(ПараметрыОтбора);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		НайденныеСтроки[0].Значение = ВыбранныеФайлы[0];
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура НачалоВыбораДиректорииВНастройки(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ТекущийФайл = Новый Файл(Элемент.ТекстРедактирования);
	Диалог.Каталог = ТекущийФайл.Путь;
	Диалог.МножественныйВыбор = Ложь;
	ВыбранныеФайлы = Ждать Диалог.ВыбратьАсинх();
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура("Ключ", Элемент.Имя);
	НайденныеСтроки = Объект.Настройки.НайтиСтроки(ПараметрыОтбора);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		НайденныеСтроки[0].Значение = ВыбранныеФайлы[0];
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ЗаполнитьПоУмолчанию(Команда)
	
	Объект.Настройки.Очистить();
	Ждать ИнициализироватьНастройки();
	СоздатьОбновитьЭлементыНастроек();
	СохранитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьИЗакрыть(Команда)
	
	СохранитьНастройки();
	Закрыть(СериализованныеНастройки());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СериализованныеНастройки()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Возврат Обработка.ТаблицаВМассивСтруктур(Объект.Настройки.Выгрузить());
	
КонецФункции

&НаСервере
Процедура ЗаполнитьОбъектИзОбъектаВладельца(Знач ОбъектВладельца)
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ЗаполнитьОбъектФормы(Объект, ОбъектВладельца);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНастройки()
	
	СохраненныеНастройки = ХранилищеОбщихНастроек.Загрузить(Объект.ИмяПрограммы, "НастройкиПрограммы");
	
	Если ТипЗнч(СохраненныеНастройки) = Тип("ТаблицаЗначений") Тогда
		Объект.Настройки.Загрузить(СохраненныеНастройки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	ХранилищеОбщихНастроек.Сохранить(
		Объект.ИмяПрограммы,
		"НастройкиПрограммы",
		Объект.Настройки.Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Асинх Функция ИнициализироватьНастройки() Экспорт
	
	КаталогВременныхФайлов = Ждать КаталогВременныхФайловАсинх();
	КаталогВыгрузки = КаталогВременныхФайлов + Объект.ИмяПрограммы;
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ВерсияПриложения = СистемнаяИнформация.ВерсияПриложения;
	
	ТипыПлатформыWindows = Новый Массив;
	ТипыПлатформыWindows.Добавить(ТипПлатформы.Windows_x86);
	ТипыПлатформыWindows.Добавить(ТипПлатформы.Windows_x86_64);
	
	ЭтоWindows = ТипыПлатформыWindows.Найти(СистемнаяИнформация.ТипПлатформы) <> Неопределено;
	
	РазделительДиректорий = "/";
	РасширениеИсполняемогоФайла = "";
	
	Если ЭтоWindows Тогда
		
		РазделительДиректорий = "\";
		РасширениеИсполняемогоФайла = ".exe";
		
	КонецЕсли;
	
	КаталогПрограммы = КаталогПрограммы();
	ИмяИсполняемогоФайла = СтрШаблон("%1%2%3", КаталогПрограммы, "1cv8", РасширениеИсполняемогоФайла);
	ИмяИсполняемогоФайлаIbcmd = СтрШаблон("%1ibcmd%3", КаталогПрограммы, РасширениеИсполняемогоФайла);
	ИсполняемыйФайлIbcmd = Новый Файл(ИмяИсполняемогоФайлаIbcmd);
	УтилитаIbcmdУстановлена = Ждать ИсполняемыйФайлIbcmd.СуществуетАсинх();
	АдресВременнойБазы = СтрШаблон("%1%2tempdb", КаталогВыгрузки, РазделительДиректорий);
	АдресФайлаРасширения = СтрШаблон("%1%2%3.cfe", КаталогВыгрузки, РазделительДиректорий, Объект.ИмяПрограммы);
	АдресВыгрузкиРасширения = СтрШаблон("%1%2src", КаталогВыгрузки, РазделительДиректорий);
	АдресФайлаВерсий = СтрШаблон("%1%2ConfigDumpInfo.xml", КаталогВыгрузки, РазделительДиректорий);
	КаталогДокументов = Ждать КаталогДокументовАсинх();
	РабочийКаталог = СтрШаблон("%1%2", КаталогДокументов, Объект.ИмяПрограммы);
	
	ДобавитьНастройку("ВерсияПриложения", ВерсияПриложения);
	ДобавитьНастройку("РазделительДиректорий", РазделительДиректорий);
	ДобавитьНастройку("УтилитаIbcmdУстановлена", УтилитаIbcmdУстановлена);
	ДобавитьНастройку("ИсполняемыйФайлПриложения", ИмяИсполняемогоФайла, "Файл");
	ДобавитьНастройку("КаталогВыгрузки", КаталогВыгрузки, "Директория");
	ДобавитьНастройку("АдресВременнойБазы", АдресВременнойБазы, "Директория");
	ДобавитьНастройку("АдресФайлаРасширения", АдресФайлаРасширения, "Файл");
	ДобавитьНастройку("АдресВыгрузкиРасширения", АдресВыгрузкиРасширения, "Директория");
	ДобавитьНастройку("АдресФайлаВерсий", АдресФайлаВерсий, "Файл");
	ДобавитьНастройку("РабочийКаталог", РабочийКаталог, "Директория");
	
	Если УтилитаIbcmdУстановлена Тогда
		ДобавитьНастройку("ИсполняемыйФайлIbcmd", ИмяИсполняемогоФайлаIbcmd, "Файл");
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьНастройку(Ключ, Значение, Тип = Неопределено)
	
	Настройка = Объект.Настройки.Добавить();
	Настройка.Ключ = Ключ;
	Настройка.Значение = Значение;
	Настройка.Тип = Тип;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьОбновитьЭлементыНастроек()
	
	КоличествоЭлементовНастроек = Элементы.ГруппаНастройки.ПодчиненныеЭлементы.Количество();
	
	Для Сч = 1 По КоличествоЭлементовНастроек Цикл
		
		Элемент = Элементы.ГруппаНастройки.ПодчиненныеЭлементы[КоличествоЭлементовНастроек - Сч];
		Элементы.Удалить(Элемент);
		
	КонецЦикла;
	
	Попытка
		
		Для Каждого Настройка Из Объект.Настройки Цикл
			
			ЭлементНастройки = Элементы.Добавить(Настройка.Ключ, Тип("ПолеФормы"), Элементы.ГруппаНастройки);
			ЭлементНастройки.Вид = ВидПоляФормы.ПолеВвода;
			ЭлементНастройки.Заголовок = Настройка.Ключ;
			ЭлементНастройки.ПутьКДанным = СтрШаблон("Объект.Настройки[%1].Значение", Объект.Настройки.Индекс(Настройка));
			
			Если Настройка.Тип = "Директория" Тогда
				
				ЭлементНастройки.КнопкаВыбора = Истина;
				ЭлементНастройки.УстановитьДействие("НачалоВыбора", "НачалоВыбораДиректорииВНастройки");
				
			КонецЕсли;
			
			Если Настройка.Тип = "Файл" Тогда
				
				ЭлементНастройки.КнопкаВыбора = Истина;
				ЭлементНастройки.УстановитьДействие("НачалоВыбора", "НачалоВыбораФайлаВНастройки");
				
			КонецЕсли;
			
			ЭлементНастройки.УстановитьДействие("ПриИзменении", "НастройкаПриИзменении");
			
		КонецЦикла;
		
	Исключение
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти