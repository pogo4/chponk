{Амперсанд}{ДирективаКомпиляции}
{ТипМетода} Чпоньк_Выполнить{ТипМетода}{ДирективаКомпиляции}Извне(Чпоньк_Модуль, Чпоньк_ИмяПроцедуры, Чпоньк_АргументыМетода)
	
	Чпоньк_ИскомыйКлючПроцедуры = СтрШаблон("ПЭ-%1-%2",
		Чпоньк.ИмяМодуляПоТипу(ТипЗнч(Чпоньк_Модуль)),
		Чпоньк_ИмяПроцедуры);
	
	Чпоньк_ЗамещающиеМетоды = Чпоньк.ПрочитатьНастройки("ЗамещающиеМетоды");
	Чпоньк_НайденныйМетод = Неопределено;
	{ИмяПеременнойВозврата}{ИнициализацияПеременнойВозврата}
	
	Для Каждого Чпоньк_ЗамещающийМетод Из Чпоньк_ЗамещающиеМетоды Цикл
		
		Если СтрНайти(Чпоньк_ЗамещающийМетод.Ключ, Чпоньк_ИскомыйКлючПроцедуры) > 0 Тогда
			
			Чпоньк_НайденныйМетод = Чпоньк_ЗамещающийМетод.Значение;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Чпоньк_НайденныйМетод <> Неопределено Тогда
		{ПрисвоениеПеременнойВозврата}Чпоньк_Модуль.Чпоньк_Выполнить{ТипМетода}(Чпоньк_НайденныйМетод.Ключ, Чпоньк_АргументыМетода);
	Иначе
		
		Чпоньк_СтрокиОписанияАргументов = Новый Массив;
		Чпоньк_ИменаАргументов = Новый Массив;
		
		Для Чпоньк_Сч = 0 По Чпоньк_АргументыМетода.ВГраница() Цикл
			
			Чпоньк_СтрокиОписанияАргументов.Добавить(СтрШаблон("Чпоньк_%1 = Чпоньк_АргументыМетода[%1]", Чпоньк_Сч));
			Чпоньк_ИменаАргументов.Добавить(СтрШаблон("Чпоньк_%1", Чпоньк_Сч));
			
		КонецЦикла;
		
		Чпоньк_КодВызова = СтрШаблон("%1 {ПрисвоениеПеременнойВозврата}Чпоньк_Модуль.%2(%3)",
			СтрСоединить(Чпоньк_СтрокиОписанияАргументов, "; "),
			Чпоньк_ИмяПроцедуры,
			СтрСоединить(Чпоньк_ИменаАргументов, ", "));
		
		Выполнить(Чпоньк_КодВызова);
		
	КонецЕсли;
	
	Возврат {ИмяПеременнойВозврата};
	
{КонецМетода}
