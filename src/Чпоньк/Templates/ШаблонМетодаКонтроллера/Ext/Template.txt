{Амперсанд}{ДирективаКомпиляции}
{ТипМетода} Чпоньк_Выполнить{ТипМетода}{ДирективаКомпиляции}(Чпоньк_КлючМетода, Чпоньк_АргументыМетода) Экспорт
	
	Чпоньк_МеткаВозврата = Строка(Новый УникальныйИдентификатор);
	{ИмяПеременнойВозврата}{ИнициализацияПеременнойВозврата}
	Чпоньк_КодМетода = Чпоньк.КодМетода(Чпоньк_КлючМетода, Чпоньк_МеткаВозврата, "{ИмяПеременнойВозврата}");
	
	Чпоньк_ЧастиКлюча = СтрРазделить(Чпоньк_КлючМетода, "-");
	Чпоньк_ПараметрыМетода = СтрРазделить(Чпоньк_ЧастиКлюча[3], ",");
	
	Если Чпоньк_КодМетода = "" Тогда
		Чпоньк_КодМетода = СтрШаблон("%1(%2)", Чпоньк_ЧастиКлюча[2], Чпоньк_ЧастиКлюча[3]);
	КонецЕсли;
	
	Если Чпоньк_ПараметрыМетода.Количество() = 1 И Не ЗначениеЗаполнено(Чпоньк_ПараметрыМетода[0]) Тогда
		Чпоньк_ПараметрыМетода.Очистить();
	КонецЕсли;
	
	Если Чпоньк_ПараметрыМетода.Количество() <> Чпоньк_АргументыМетода.Количество() Тогда
		ВызватьИсключение СтрШаблон("В метод %1 передано некорректное количество аргументов", Чпоньк_ЧастиКлюча[2]);
	КонецЕсли;
	
	Если Чпоньк_ПараметрыМетода.Количество() > 0 Тогда
		
		Чпоньк_ОписанияАргументов = Новый Массив;
		
		Для Чпоньк_Сч = 0 По Чпоньк_ПараметрыМетода.ВГраница() Цикл
			
			Чпоньк_ЧастиОписанияПараметра = СтрРазделить(Чпоньк_ПараметрыМетода[Чпоньк_Сч], "=", Ложь);
			Чпоньк_ИмяПараметра = СтрЗаменить(Чпоньк_ЧастиОписанияПараметра[0], "Знач ", "");
			
			Если Чпоньк_ЧастиОписанияПараметра.Количество() > 1 
				И Чпоньк_АргументыМетода[Чпоньк_Сч] = Неопределено Тогда
				
				Чпоньк_ОписаниеАргумента = СтрШаблон("%1 = %2;", Чпоньк_ИмяПараметра, Чпоньк_ЧастиОписанияПараметра[1]);
				
			Иначе
				Чпоньк_ОписаниеАргумента = СтрШаблон("%1 = Чпоньк_АргументыМетода[%2];", Чпоньк_ИмяПараметра, Чпоньк_Сч);
			КонецЕсли;
			
			Чпоньк_ОписанияАргументов.Добавить(Чпоньк_ОписаниеАргумента);
			
		КонецЦикла;
		
		Чпоньк_КодМетода = СтрШаблон("%1%2%3",
			СтрСоединить(Чпоньк_ОписанияАргументов, " "),
			Символы.ПС,
			Чпоньк_КодМетода);
		
	КонецЕсли;
	
	Попытка
		Выполнить(Чпоньк_КодМетода);
	Исключение
		Чпоньк_ТекстИсключения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		Если Чпоньк_ТекстИсключения <> Чпоньк_МеткаВозврата Тогда
			ВызватьИсключение;
		КонецЕсли;
	КонецПопытки;
	
	Возврат {ИмяПеременнойВозврата};
	
{КонецМетода}
